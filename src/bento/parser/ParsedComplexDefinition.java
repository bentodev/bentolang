/* Bento
 *
 * $Id: ParsedComplexDefinition.java,v 1.6 2014/03/24 02:16:02 sthippo Exp $
 *
 * Copyright (c) 2002-2014 by bentodev.org
 *
 * Use of this code in source or compiled form is subject to the
 * Bento Poetic License at http://www.bentodev.org/poetic-license.html
 */

package bento.parser;

import bento.lang.*;

/**
 * Based on code generated by jjtree.
 *
 * @author Michael St. Hippolyte
 * @version $Revision: 1.6 $
 */
public class ParsedComplexDefinition extends ComplexDefinition implements Scoped {

    public ParsedComplexDefinition(int id) {
        super();
    }

    /** Accept the visitor. **/
    public Object jjtAccept(BentoParserVisitor visitor, Object data) {
        return visitor.visit(this, data);
    }

    public void init() {
        int len = children.length;
        if (len > 0) {
            AbstractNode node = children[0];
            if (node instanceof Type) {
                init((Type) node, (NameNode) children[1], (len > 2 ? children[2] : null));
            } else {
                init(null, (NameNode) node, (len > 1 ? children[1] : null));
            }
        }
    }

    public void setModifiers(int access, int dur) {
        setAccess(access);
        setDurability(dur);
    }
    
    public NameNode getDefName() {
        return getNameNode();
    }

}
