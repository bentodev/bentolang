/* Bento
 *
 * $Id: ParsedPrimitiveType.java,v 1.6 2010/04/23 13:41:57 sthippo Exp $
 *
 * Copyright (c) 2002-2015 by bentodev.org
 *
 * Use of this code in source or compiled form is subject to the
 * Bento Poetic License at http://www.bentodev.org/poetic-license.html
 */

package bento.parser;

import bento.lang.*;

/**
 * Based on code generated by jjtree.
 *
 * @author Michael St. Hippolyte
 * @version $Revision: 1.6 $
 */
public class ParsedPrimitiveType extends PrimitiveType {
    public ParsedPrimitiveType(int id) {
        super();
    }

    void makeBoolean() {
        setType(Boolean.TYPE);
    }
    void makeChar() {
        setType(Character.TYPE);
    }
    void makeByte() {
        setType(Byte.TYPE);
    }
    void makeShort() {
        setType(Short.TYPE);
    }
    void makeInt() {
        setType(Integer.TYPE);
    }
    void makeLong() {
        setType(Long.TYPE);
    }
    void makeFloat() {
        setType(Float.TYPE);
    }
    void makeDouble() {
        setType(Double.TYPE);
    }
    void makeNumber() {
        setType(Number.class);
    }
    void makeString() {
        setType(String.class);
    }
    void makeContinuation() {
        setType(Continuation.class);
    }
    void makeVoid() {
        setType(Void.TYPE);
    }
    

    /** Accept the visitor. **/
    public Object jjtAccept(BentoParserVisitor visitor, Object data) {
        return visitor.visit(this, data);
    }
}
